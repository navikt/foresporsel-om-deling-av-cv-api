name: Bygg og deploy

on: [ push, workflow_dispatch ]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.docker.outputs.image }}
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'
      - run: ./gradlew shadowJar
      - uses: nais/docker-build-push@v0
        id: docker
        with:
          team: toi
          tag: ${{ contains(fromJSON('["refs/heads/master", "refs/heads/main"]'), github.ref) && 'latest' || github.sha }}
          dockerfile: Dockerfile
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}

  deploy-to-dev:
    name: Deploy to dev
    needs: build-and-publish
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/revert-saa-funker-i-dev'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-fss
          VAR: image=${{ needs.build-and-publish.outputs.image }}
          RESOURCE: nais/nais.yaml
          VARS: nais/nais-dev.json

  deploy-to-prod:
    name: Deploy to prod
    needs:
      - deploy-to-dev
      - build-and-publish
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: prod-fss
          VAR: image=${{ needs.build-and-publish.outputs.image }}
          RESOURCE: nais/nais.yaml,nais/alerts.yaml
          VARS: nais/nais-prod.json

  call-trivy-security-scan:
    needs: build-and-publish
    uses: navikt/toi-github-actions-workflows/.github/workflows/trivy-security-scan.yaml@main
    with:
      image: ${{ needs.build-and-publish.outputs.image }}
    permissions:
      id-token: write
      security-events: write
    secrets: inherit
